#!/usr/bin/env python3
"""
Template for importing data into the Reagent Database
This script provides examples for inserting data into each table
"""

import sqlite3
import os
from config import get_db_path

def import_data():
    """Import data into the database"""
    DB_PATH = get_db_path()
    
    # Check if database exists
    if not os.path.exists(DB_PATH):
        print(f"Database not found at: {DB_PATH}")
        print("Please run setup_db.py first to create the database")
        return False
    
    # Connect to database
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    try:
        # Example: Insert a freezer
        print("Inserting example freezer...")
        cursor.execute('''
            INSERT INTO freezer (freezer_id, freezer_location, freezer_condition, freezer_date)
            VALUES (?, ?, ?, ?)
        ''', ('F001', 'Lab 101 - Freezer A', '-80Â°C', '2023-01-15'))
        
        # Example: Insert an organism
        print("Inserting example organism...")
        cursor.execute('''
            INSERT INTO organisms (organism_id, organism_name, organism_genus, organism_species, organism_strain)
            VALUES (?, ?, ?, ?, ?)
        ''', ('ORG001', 'E. coli K-12', 'Escherichia', 'coli', 'K-12'))
        
        # Example: Insert a plasmid
        print("Inserting example plasmid...")
        cursor.execute('''
            INSERT INTO plasmid (plasmid_id, plasmid_name, plasmid_type, plasmid_express_organism, plasmid_description)
            VALUES (?, ?, ?, ?, ?)
        ''', ('P001', 'pUC19', 'Cloning vector', 'E. coli', 'High-copy number cloning vector'))
        
        # Example: Insert an ORF sequence
        print("Inserting example ORF sequence...")
        cursor.execute('''
            INSERT INTO orf_sequence (
                orf_id, orf_name, orf_annotation, orf_sequence, 
                orf_with_stop, orf_open, orf_organism_id, 
                orf_length_bp, orf_entrez_id, orf_ensembl_id, 
                orf_uniprot_id, orf_ref_url
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        ''', (
            'ORF001', 
            'lacZ', 
            'Beta-galactosidase', 
            'ATGACCATGATTACGGATTCACTGGCCGTCGTTTTACAACGTCGTGACTGGGAAAACCCTGGCGTTACCCAACTTAATCGCCTTGCAGCACATCCCCCTTTCGCCAGCTGGCGTAATAGCGAAGAGGCCCGCACCGATCGCCCTTCCCAACAGTTGCGCAGCCTGAATGGCGAATGGCGCTTTGCCTGGTTTCCGGCACCAGAAGCGGTGCCGGAAAGCTGGCTGGAGTGCGATCTTCCTGAGGCCGATACTGTCGTCGTCCCCTCAAACTGGCAGATGCACGGTTACGATGCGCCCATCTACACCAACGTAACCTATCCCATTACGGTCAATCCGCCGTTTGTTCCCACGGAGAATCCGACGGGTTGTTACTCGCTCACATTTAATGTTGATGAAAGCTGGCTACAGGAAGGCCAGACGCGAATTATTTTTGATGGCGTTAACTCGGCGTTTCATCTGTGGTGCAACGGGCGCTGGGTCGGTTACGGCCAGGACAGTCGTTTGCCGTCTGAATTTGACCTGAGCGCATTTTTACGCGCCGGAGAAAACCGCCTCGCGGTGATGGTGCTGCGTTGGAGTGACGGCAGTTATCTGGAAGATCAGGATATGTGGCGGATGAGCGGCATTTTCCGTGACGTCTCGTTGCTGCATAAACCGACTACACAAATCAGCGATTTCCATGTTGCCACTCGCTTTAATGATGATTTCAGCCGCGCTGTACTGGAGGCTGAAGTTCAGATGTGCGGCGAGTTGCGTGACTACCTACGGGTAACAGTTTCTTTATGGCAGGGTGAAACGCAGGTCGCCAGCGGCACCGCGCCTTTCGGCGGTGAAATTATCGATGAGCGTGGTGGTTATGCCGATCGCGTCACACTACGTCTGAACGTCGAAAACCCGAAACTGTGGAGCGCCGAAATCCCGAATCTCTATCGTGCGGTGGTTGAACTGCACACCGCCGACGGCACGCTGATTGAAGCAGAAGCCTGCGATGTCGGTTTCCGCGAGGTGCGGATTGAAAATGGTCTGCTGCTGCTGAACGGCAAGCCGTTGCTGATTCGAGGCGTTAACCGTCACGAGCATCATCCTCTGCATGGTCAGGTCATGGATGAGCAGACGATGGTGCAGGATATCCTGCTGATGAAGCAGAACAACTTTAACGCCGTGCGCTGTTCGCATTATCCGAACCATCCGCTGTGGTACACGCTGTGCGACCGCTACGGCCTGTATGTGGTGGATGAAGCCAATATTGAAACCCACGGCATGGTGCCAATGAATCGTCTGACCGATGATCCGCGCTGGCTACCGGCGATGAGCGAACGCGTAACGCGAATGGTGCAGCGCGATCGTAATCACCCGAGTGTGATCATCTGGTCGCTGGGGAATGAATCAGGCCACGGCGCTAATCACGACGCGCTGTATCGCTGGATCAAATCTGTCGATCCTTCCCGCCCGGTGCAGTATGAAGGCGGCGGAGCCGACACCACGGCCACCGATATTATTTGCCCGATGTACGCGCGCGTGGATGAAGACCAGCCCTTCCCGGCTGTGCCGAAATGGTCCATCAAAAAATGGCTTTCGCTACCTGGAGAGACGCGCCCGCTGATCCTTTGCGAATACGCCCACGCGATGGGTAACAGTCTTGGCGGTTTCGCTAAATACTGGCAGGCGTTTCGTCAGTATCCCCGTTTACAGGGCGGCTTCGTCTGGGACTGGGTGGATCAGTCGCTGATTAAATATGATGAAAACGGCAACCCGTGGTCGGCTTACGGCGGTGATTTTGGCGATACGCCGAACGATCGCCAGTTCTGTATGAACGGTCTGGTCTTTGCCGACCGCACGCCGCATCCAGCGCTGACGGAAGCAAAACACCAGCAGCAGTTTTTCCAGTTCCGTTTATCCGGGCAAACCATCGAAGTGACCAGCGAATACCTGTTCCGTCATAGCGATAACGAGCTCCTGCACTGGATGGTGGCGCTGGATGGTAAGCCGCTGGCAAGCGGTGAAGTGCCTCTGGATGTCGCTCCACAAGGTAAACAGTTGATTGAACTGCCTGAACTACCGCAGCCGGAGAGCGCCGGGCAACTCTGGCTCACAGTACGCGTAGTGCAACCGAACGCGACCGCATGGTCAGAAGCCGGGCACATCAGCGCCTGGCAGCAGTGGCGTCTGGCGGAAAACCTCAGTGTGACGCTCCCCGCCGCGTCCCACGCCATCCCGCATCTGACCACCAGCGAAATGGATTTTTGCATCGAGCTGGGTAATAAGCGTTGGCAATTTAACCGCCAGTCAGGCTTTCTTTCACAGATGTGGATTGGCGATAAAAAACAACTGCTGACGCCGCTGCGCGATCAGTTCACCCGTGCACCGCTGGATAACGACATTGGCGTAAGTGAAGCGACCCGCATTGACCCTAACGCCTGGGTCGAACGCTGGAAGGCGGCGGGCCATTACCAGGCCGAAGCAGCGTTGTTGCAGTGCACGGCAGATACACTTGCTGATGCGGTGCTGATTACGACCGCTCACGCGTGGCAGCATCAGGGGAAAACCTTATTTATCAGCCGGAAAACCTACCGGATTGATGGTAGTGGTCAAATGGCGATTACCGTTGATGTTGAAGTGGCGAGCGATACACCGCATCCGGCGCGGATTGGCCTGAACTGCCAGCTGGCGCAGGTAGCAGAGCGGGTAAACTGGCTCGGATTAGGGCCGCAAGAAAACTATCCCGACCGCCTTACTGCCGCCTGTTTTGACCGCTGGGATCTGCCATTGTCAGACATGTATACCCCGTACGTCTTCCCGAGCGAAAACGGTCTGCGCTGCGGGACGCGCGAATTGAATTATGGCCCACACCAGTGGCGCGGCGACTTCCAGTTCAACACATCACAACGCGCGGGTCAACGATGGCGCGCAACGCGGCCAGGTTCATTCATTCACGCACTGAATCTGGCCGGTGCCGCCGCATCCACGCCGGTTGAGTCGACGACCGTGGCGCGGGAAATGGCGTTACCGACGAACTTGGCGCGGTCGCGTGCGTAATCACGATGCTGTGATCAGCGCCGGGATCGAAATCGCCGAACAGCCGGTAGCCGAGCTGCGCCAGCAGGTGATCGAGCAAATTGCCGAAGATCTGGCGACCGAGTTGGTAATCGTCGCGCGCCGTCAGGCGCAGATCTTCATCACGCGCACGATGGTCGCGCAGCTGATTGCCCGTCTGAGCGAAGCCGATGAAGACCAGCCCTTCCCGCAGAGCCTGCCCGCACTGCGCGCCGGTGTGATCGACGCCTTCGCGCGCCTGACGGAAGAACGCGCACTGGTACTGACCGACAAACTGACCGAACTGCATACGCTGCTGATTGCCGCCAGCCAGGTGATCATTGCGCCGTATGCTGCAACGCTGACTGCCGATCGCTATGCCCGCGCCTAA', 
            1, 
            0, 
            'ORG001', 
            3075, 
            '945006', 
            'b0344', 
            'P00722', 
            'https://www.uniprot.org/uniprotkb/P00722/entry'
        ))
        
        # Example: Insert an ORF position
        print("Inserting example ORF position...")
        cursor.execute('''
            INSERT INTO orf_position (orf_id, plate, well, freezer_id, plasmid_id, orf_create_date)
            VALUES (?, ?, ?, ?, ?, ?)
        ''', ('ORF001', 'Plate A', 'A1', 'F001', 'P001', '2023-01-20'))
        
        # Commit changes
        conn.commit()
        print("Example data inserted successfully")
        
    except sqlite3.Error as e:
        print(f"Error inserting data: {e}")
        conn.rollback()
        return False
    finally:
        conn.close()
    
    return True

def main():
    """Run the import process"""
    print("\n===== REAGENT DATABASE IMPORT TEMPLATE =====\n")
    print("This is a template script for importing data into the database.")
    print("It will insert some example data to demonstrate the process.")
    print("\nNote: This is meant as a starting point for creating your own import scripts.")
    
    # Confirm with user
    confirm = input("Do you want to insert the example data? (y/N): ")
    
    if confirm.lower() != 'y':
        print("Import cancelled")
        return
    
    # Import data
    if import_data():
        print("\nExample data import completed successfully!")
        print("You can use this template as a starting point for your own imports.")
    else:
        print("\nError importing data")

if __name__ == "__main__":
    main()
